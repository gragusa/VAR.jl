function get_VAR_lag_length{T<:BlasReal}(D::Matrix{T}, pbar::Integer, ic::ASCIIString)
     if ic == "aic"
        AIC   = zeros(pbar,1)
        for p = 1:pbar      
            var = VAR(D,p)
            n,m = size(var.pp.Xt)
            t = n-p
            sig = var.pp.SS/t
            AIC[p] = log(det(sig))+2*p*m^2/t   
        end
        length = indmin(AIC)
     elseif ic == "bic"
            BIC   = zeros(pbar,1)
            for p = 1:pbar      
                var = VAR(D,p)
                n,m = size(var.pp.Xt)
                t = n-p
                sig = var.pp.SS/t
                BIC[p] = log(det(sig))+(m^2*p)*log(t)/t                      
            end
            length = indmin(BIC)
     elseif ic == "hqc"
            HQC   = zeros(pbar,1);
            for p = 1:pbar      
                var = VAR(D,p)
                n,m = size(var.pp.Xt)
                t = n-p
                sig = var.pp.SS/t
                HQC[p] = log(det(sig))+2*log(log(t))*m^2*p/t                   
            end   
            length = indmin(HQC)   
     elseif ic == "aicc"
            AICC   = zeros(pbar,1)
            for p = 1:pbar      
                var = VAR(D,p)
                n,m = size(var.pp.Xt)
                t = n-p
                sig = var.pp.SS/t
                b = t/(t-(p*m+m+1))
                AICC[p] = t*(log(det(sig))+m)+2*b*(m^2*p+m*(m+1)/2)                     
            end   
            length = indmin(AICC)
     elseif error("'ic' must be aic, bic, hqc or aicc")
     end
     println("Using $ic the best lag-length is $length")
end


 
